<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sakura的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bbasakura.github.io/"/>
  <updated>2019-12-25T03:51:10.458Z</updated>
  <id>https://bbasakura.github.io/</id>
  
  <author>
    <name>Sakura</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>md语法插入图片</title>
    <link href="https://bbasakura.github.io/posts/12430667888.html"/>
    <id>https://bbasakura.github.io/posts/12430667888.html</id>
    <published>2019-12-25T03:34:23.054Z</published>
    <updated>2019-12-25T03:51:10.458Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Dec 25 2019 11:53:08 GMT+0800 (GMT+08:00) --><p>之前是用到了一个资源插件，最后的结果是每次新建一篇文章会在目录下生成同名的资源文件夹，个人感觉这样有些麻烦，使用md语法插入图片进行测试，测试当中没有裂图，当前在本地测试，还没推送到git上。刚才一直在研究hexo-admin【在线发布后台】，不过没有成功，最后一步deploy时，报错。而且本地环境是windows,干脆暂时不写，而是将一个shell脚本文件放到桌面，发布文章就在post目录下新建md文件，编写好之后，用shell脚本文件，一键发布[就当是一键发布了]，哈哈哈。</p><p>使用md语法插入图片:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">bk5.jpg</span>](<span class="link">/images/bk5.jpg "测试图"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/bk5.jpg" alt="bk5.jpg" title="测试图"></p><p><img src="/images/%E8%83%8C%E6%99%AF%E5%9B%BE.jpg" alt="背景图.jpg" title="测试图"></p><a id="more"></a><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="新建一片文章"><a href="#新建一片文章" class="headerlink" title="新建一片文章"></a>新建一片文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>更多: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Dec 25 2019 11:53:08 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;之前是用到了一个资源插件，最后的结果是每次新建一篇文章会在目录下生成同名的资源文件夹，个人感觉这样有些麻烦，使用md语法插入图片进行测试，测试当中没有裂图，当前在本地测试，还没推送到git上。刚才一直在研究hexo-admin【在线发布后台】，不过没有成功，最后一步deploy时，报错。而且本地环境是windows,干脆暂时不写，而是将一个shell脚本文件放到桌面，发布文章就在post目录下新建md文件，编写好之后，用shell脚本文件，一键发布[就当是一键发布了]，哈哈哈。&lt;/p&gt;&lt;p&gt;使用md语法插入图片:&lt;/p&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;![&lt;span class=&quot;string&quot;&gt;bk5.jpg&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;/images/bk5.jpg &quot;测试图&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img src=&quot;/images/bk5.jpg&quot; alt=&quot;bk5.jpg&quot; title=&quot;测试图&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/images/%E8%83%8C%E6%99%AF%E5%9B%BE.jpg&quot; alt=&quot;背景图.jpg&quot; title=&quot;测试图&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂记" scheme="https://bbasakura.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="博客" scheme="https://bbasakura.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>本地图片不显示问题</title>
    <link href="https://bbasakura.github.io/posts/525459397.html"/>
    <id>https://bbasakura.github.io/posts/525459397.html</id>
    <published>2019-12-24T08:06:48.000Z</published>
    <updated>2019-12-24T08:26:17.186Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Dec 25 2019 10:41:26 GMT+0800 (GMT+08:00) --><h3 id="问题：类似以这样"><a href="#问题：类似以这样" class="headerlink" title="问题：类似以这样"></a>问题：类似以这样</h3><img src="/posts/525459397/%E9%97%AE%E9%A2%98.jpg"><h3 id="解决放法：插件安装与配置"><a href="#解决放法：插件安装与配置" class="headerlink" title="解决放法：插件安装与配置"></a>解决放法：插件安装与配置</h3><p>首先我们需要安装一个图片路径转换的插件，这个插件名字是<strong>hexo-asset-image</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:<span class="regexp">//gi</span>thub.com<span class="regexp">/CodeFalling/</span>hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>但是这个插件的内容需要修改【不然可能会出Bug】&lt;– more&gt;</p><p>打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码</p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">'cheerio'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPosition</span>(<span class="params">str, m, i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="built_in">String</span>(hexo.version).split(<span class="string">'.'</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">'after_post_render'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">    <span class="keyword">var</span> link = data.permalink;</span><br><span class="line"><span class="keyword">if</span>(version.length &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">   <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">'/'</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">'/'</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="comment">// In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".</span></span><br><span class="line"><span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">'/'</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">'excerpt'</span>, <span class="string">'more'</span>, <span class="string">'content'</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: <span class="literal">false</span>,</span><br><span class="line">        xmlMode: <span class="literal">false</span>,</span><br><span class="line">        lowerCaseTags: <span class="literal">false</span>,</span><br><span class="line">        decodeEntities: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">'img'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($(<span class="keyword">this</span>).attr(<span class="string">'src'</span>))&#123;</span><br><span class="line"><span class="comment">// For windows style path, we replace '\' to '/'.</span></span><br><span class="line"><span class="keyword">var</span> src = $(<span class="keyword">this</span>).attr(<span class="string">'src'</span>).replace(<span class="string">'\\'</span>, <span class="string">'/'</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.test(src) &amp;&amp;</span><br><span class="line">   !<span class="regexp">/^\s*\//</span>.test(src)) &#123;</span><br><span class="line">  <span class="comment">// For "about" page, the first part of "src" can't be removed.</span></span><br><span class="line">  <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">  <span class="keyword">var</span> linkArray = link.split(<span class="string">'/'</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">''</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> srcArray = src.split(<span class="string">'/'</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">''</span> &amp;&amp; elem != <span class="string">'.'</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span>(srcArray.length &gt; <span class="number">1</span>)</span><br><span class="line">srcArray.shift();</span><br><span class="line">  src = srcArray.join(<span class="string">'/'</span>);</span><br><span class="line">  $(<span class="keyword">this</span>).attr(<span class="string">'src'</span>, config.root + link + src);</span><br><span class="line">  <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">"update link as:--&gt;"</span>+config.root + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">"no src attr, skipped..."</span>);</span><br><span class="line"><span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info($(<span class="keyword">this</span>));</span><br><span class="line">&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>打开_config.yml文件[zhel]，修改下述内容:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>当资源文件管理功能【post_asset_folder: true】打开后，Hexo将会在你每一次通过 hexo new [layout]</p><title>命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。<p></p><p>相对路径引用的标签插件</p><p>通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">asset_path</span> slug %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">asset_img</span> slug [title] %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">asset_link</span> slug [title] %&#125;</span></span><br></pre></td></tr></table></figure><p>比如说：当你打开文章资源文件夹功能后，你把一个 example.jpg 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法，它将 不会 出现在首页上。（但是它会在文章中按你期待的方式工作）</p><p>正确的引用图片方式是使用下列的标签插件：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">asset_img</span> zhangsan.jpg 图片下方显示的标题 %&#125;</span></span><br></pre></td></tr></table></figure><p>通过这种方式，图片将会同时出现在文章和主页以及归档页中。通过[]</p><h3 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h3><ol><li><a href="https://blog.csdn.net/wu_xianqiang/article/details/90899395" target="_blank" rel="noopener">https://blog.csdn.net/wu_xianqiang/article/details/90899395</a></li><li><a href="https://blog.csdn.net/xjm850552586/article/details/84101345" target="_blank" rel="noopener">https://blog.csdn.net/xjm850552586/article/details/84101345</a></li></ol></title><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Dec 25 2019 10:41:26 GMT+0800 (GMT+08:00) --&gt;&lt;h3 id=&quot;问题：类似以这样&quot;&gt;&lt;a href=&quot;#问题：类似以这样&quot; class=&quot;headerlink&quot; title=&quot;问题：类似以这样&quot;&gt;&lt;/a&gt;问题：类似以这样&lt;/h3&gt;&lt;img src=&quot;/posts/525459397/%E9%97%AE%E9%A2%98.jpg&quot;&gt;&lt;h3 id=&quot;解决放法：插件安装与配置&quot;&gt;&lt;a href=&quot;#解决放法：插件安装与配置&quot; class=&quot;headerlink&quot; title=&quot;解决放法：插件安装与配置&quot;&gt;&lt;/a&gt;解决放法：插件安装与配置&lt;/h3&gt;&lt;p&gt;首先我们需要安装一个图片路径转换的插件，这个插件名字是&lt;strong&gt;hexo-asset-image&lt;/strong&gt;&lt;/p&gt;&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install https:&lt;span class=&quot;regexp&quot;&gt;//gi&lt;/span&gt;thub.com&lt;span class=&quot;regexp&quot;&gt;/CodeFalling/&lt;/span&gt;hexo-asset-image --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;但是这个插件的内容需要修改【不然可能会出Bug】&amp;lt;– more&amp;gt;&lt;/p&gt;&lt;p&gt;打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://bbasakura.github.io/categories/hexo/"/>
    
    
      <category term="博客" scheme="https://bbasakura.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>我的hexo第一篇文章</title>
    <link href="https://bbasakura.github.io/posts/1243066710.html"/>
    <id>https://bbasakura.github.io/posts/1243066710.html</id>
    <published>2019-12-19T01:41:51.105Z</published>
    <updated>2019-12-24T07:10:44.916Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Dec 25 2019 10:41:26 GMT+0800 (GMT+08:00) --><p>hexo博客搭建的第一篇文章，是hexo官方自带的,总体的搭建过程还好，使用的是Next主题，搭建过程中参考了大佬的一篇文章，很多的CSS样式使用了cv大法。目前还有很多的小问题，逐渐完善中。</p><a id="more"></a><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="新建一片文章"><a href="#新建一片文章" class="headerlink" title="新建一片文章"></a>新建一片文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>更多: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="运行hexo服务"><a href="#运行hexo服务" class="headerlink" title="运行hexo服务"></a>运行hexo服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>更多: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="创建静态文件"><a href="#创建静态文件" class="headerlink" title="创建静态文件"></a>创建静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>更多: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="部署hexo"><a href="#部署hexo" class="headerlink" title="部署hexo"></a>部署hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>更多: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><p>参考文章：<a href="https://bestzuo.cn/posts/blog-establish.html" target="_blank" rel="noopener">https://bestzuo.cn/posts/blog-establish.html</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Dec 25 2019 10:41:26 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;hexo博客搭建的第一篇文章，是hexo官方自带的,总体的搭建过程还好，使用的是Next主题，搭建过程中参考了大佬的一篇文章，很多的CSS样式使用了cv大法。目前还有很多的小问题，逐渐完善中。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂记" scheme="https://bbasakura.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="博客" scheme="https://bbasakura.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
